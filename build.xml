<project name="MinskTransSched" default="build" basedir=".">

	<property file="build.properties" />

	<path id="project.classpath">
		<pathelement location="svnjavahl.jar" /> 
		<pathelement location="svnant.jar" />
		<pathelement location="svnClientAdapter.jar" />
	</path>
  
	<taskdef name="svn" classpathref="project.classpath"
		    classname="org.tigris.subversion.svnant.SvnTask" />

	<target name="getversion">
			<property file=".version" />

			<!-- read SVN revision-->
			<svn>
				<wcVersion path="${basedir}" />
			</svn>

			<property name="version.revision.max" value="${revision.max}" />

			<!-- generate jar version -->
			<property name="version.jar" value="${version.major}.${version.minor}.${version.publish}" />
	</target>

	<target name="publish" depends="build">
			<!-- increase publish number -->
			<propertyfile file=".version" comment="version properties">
				<entry key="version.publish" default="0" type="int" operation="+" value="1"/>
			</propertyfile>
			
			<delete>
				<fileset dir="c:\Apache-2.0.59\htdocs\mt\" includes="*.jad"/>
				<fileset dir="c:\Apache-2.0.59\htdocs\mt\" includes="*.jar"/>
			</delete>

			<property name="publish.dir" value="c:\Apache-2.0.59\htdocs\mt" />
			
			<copy file="bin/${city}TransSched-${version.jar}.jad" todir="${publish.dir}" />
			<copy file="bin/${city}TransSched-${version.jar}.jar" todir="${publish.dir}" />
	</target>

	<target name="build" depends="-initialize,getversion">
			<!-- increase build number -->
			<propertyfile file=".version">
				<entry key="version.build" default="0" type="int" operation="+" value="1"/>
			</propertyfile>

			<copy file="MinskTransSched/MinskTransSched.jad" tofile="MinskTransSched/MinskTransSched.jad~" />
			<replaceregexp file="MinskTransSched/MinskTransSched.jad"
                         match="MIDlet-Version:.*"
                         replace="MIDlet-Version: ${version.jar}"
                         byline="true"/>

			<replaceregexp file="MinskTransSched/MinskTransSched.jad"
                         match="^Version:.*"
                         replace="Version: ${version.jar}.r${version.revision.max}.b${version.build}"
                         byline="true"/>

			<ant antfile="build.xml" target="build-project" dir="ScheduleConverter" />
			<ant antfile="build.xml" target="run" dir="ScheduleConverter" />

			<ant antfile="build.xml" target="deployable" dir="MinskTransSched" />

			<move file="MinskTransSched/MinskTransSched.jad~" tofile="MinskTransSched/MinskTransSched.jad" />

			<move file="bin/MinskTransSched.jad" tofile="bin/${city}TransSched-${version.jar}.jad" />
			<move file="bin/MinskTransSched.jar" tofile="bin/${city}TransSched-${version.jar}.jar" />
			
			<replaceregexp file="bin/${city}TransSched-${version.jar}.jad"
                         match="MIDlet-Jar-URL:.*"
                         replace="MIDlet-Jar-URL: ${city}TransSched-${version.jar}.jar"
                         byline="true"/>
	</target>

	<target name="-initialize" description="Initializes the build environment">
		<echo message="Initializing build environment..." />
		
		<!-- Create the build directories -->
		<mkdir dir="${path.build}" />
		<mkdir dir="${path.build.output}" />
	</target>

	<target name="build-sources" depends="getversion" description="Make bzip2/zip archive of sources">

		<delete dir="${path.build}" />
		
		<svn>
			<export srcPath="." destPath="${path.build}" />
		</svn>
	
		<tar destfile="${path.build.output}/TransSched.tar" basedir="${path.build}" />
		<bzip2 destfile="${path.build.output}/TransSched-${version.jar}.src.tar.bz2" src="${path.build.output}/TransSched.tar"/>
		<zip destfile="${path.build.output}/TransSched-${version.jar}.src.zip" basedir="${path.build}"/>

		<delete file="${path.build.output}/TransSched.tar"/>

		<delete dir="${path.build}" />
	</target>

	<target name="clean" description="Clean">
		<ant antfile="build.xml" target="clean" dir="MinskTransSched" />
		<delete dir="${path.build.output}" />
		<delete dir="${path.build}" />
	</target>
</project>
